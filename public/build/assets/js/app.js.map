{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/* global $ */\n/* global d3 */\n/**\n * First we will load all of this project's JavaScript dependencies which\n * include Vue and Vue Resource. This gives a great starting point for\n * building robust, powerful web applications using Vue and Laravel.\n */\n\nvar monthNames = [ \"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\" ];\n    \nvar buildChart = function(selector, stat) {\n    // Make the chart square\n    var chartWidth = $(selector).parent().width();\n    var chartHeight = chartWidth - 20;  // 20 px bottom margin\n\n    // Scales\n    var x = d3.scaleBand()\n        .rangeRound([0, chartWidth])\n        .paddingInner(0.1);\n    var y = d3.scaleLinear()\n        .range([chartHeight, 0]);\n\n    // X-Axis labels\n    var xAxis = d3.axisBottom()\n        .scale(x);\n\n    // Define the chart\n    var chart = d3.select(selector)\n        .attr(\"width\", chartWidth)\n        .attr(\"height\", chartHeight + 20);\n\n    $.get('api/stats/' + stat)\n        .done(function(data) {\n            x.domain(data.map(function(d) { return monthNames[d.month - 1]; }));\n            y.domain([0, d3.max(data, function (d) { return d.count; })]);\n\n            // Add the X-Axis labels all the way at the bottom\n            chart.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + chartHeight + \")\")\n                .call(xAxis);\n\n            chart.selectAll(\".bar\")\n                    .data(data)\n                .enter().append(\"rect\")\n                    .attr(\"class\", \"bar\")\n                    .attr(\"x\", function(d) { return x(monthNames[d.month - 1]); })\n                    .attr(\"y\", function(d) { return y(d.count); })\n                    .attr(\"height\", function(d) { return chartHeight - y(d.count); })\n                    .attr(\"width\", x.bandwidth());\n            \n            chart.selectAll(\".label\")\n                    .data(data)\n                .enter().append(\"text\")\n                    .attr(\"class\", function(d) {\n                        if ( y(d.count) < 30 ) {\n                            return \"label label-inside\";\n                        } else {\n                            return \"label\";\n                        }\n                    })\n                    .attr(\"x\", function(d) { return x(monthNames[d.month - 1]) + (x.bandwidth() / 2); })\n                    .attr(\"y\", function(d) {\n                        if ( y(d.count) < 30 ) {\n                            return y(d.count) + 15;\n                        } else {\n                            return y(d.count) - 15;\n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .text(function(d) { return d.count; });\n        });\n};\n\n$( document ).ready(function() {\n    console.log(\"ready!\");\n    \n    $(\".data-chart\").each(function() {\n        buildChart(this, $(this).data('method'));\n    });\n    \n    $(\".data-list\").each(function() {\n        $.get('api/stats/' + $(this).data('method'))\n            .done(function(data) {\n                console.log(data);\n            });\n    });\n});"]}